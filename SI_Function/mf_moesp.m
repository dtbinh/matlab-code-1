function [A, B, C, D] = mf_moesp(U, Y, m, p, n)
%==========================================================================
% ◎ システム同定 - MOESP法
%==========================================================================
% [A, B, C, D] = mf_moesp(U, Y, m, p, n)
% U : 入力データ行列
% Y : 出力データ行列
% m : 入力の次数
% p : 出力の次数
% n : 状態変数の次数
% A(n*n), B(n*m), C(p*n), D(p*m) : 状態空間表現の行列

%--------------------------------------------------------------------------
% ● LQ分解
%--------------------------------------------------------------------------
km = size(U,1);
kp = size(Y,1);
[Q, L] = qr([U;Y]',0);
Q = Q';
L = L';
L11 = L(1:km, 1:km);
L21 = L(km+1:km+kp, 1:km);
L22 = L(km+1:km+kp, km+1:km+kp);
k = kp / p;

%--------------------------------------------------------------------------
% ● SVD (sU*sS*sV' = L22)
% n : 状態変数の次数
%--------------------------------------------------------------------------
[sU, sS, sV] = svd(L22);
sU1 = sU(:, 1:n);
sS1 = sS(1:n, 1:n);
sV1 = sV(:, 1:n);  % 転置であることに注意
sU2 = sU(:, n+1:end);

%--------------------------------------------------------------------------
% ● 拡大可観測行列の算出
%--------------------------------------------------------------------------
Ok = sU1 * sqrt(sS1);

%--------------------------------------------------------------------------
% ● A,B,C,D の算出
%--------------------------------------------------------------------------
C = Ok(1:p, 1:n);
A = Ok(1:kp-p,:)\Ok(p+1:kp,:);

mat_l1 = []; %左側行列 1列目
mat_r = zeros((kp-n)*k, m); %右側行列 行と列のみ指定して、成分は0で埋める
mat_M = sU2' * L21 * L11^(-1);
sU2T = sU2';

for i = 1:k
    Li_Ok(i).m = sU2T(:, p*i+1:end)*Ok(1:p*(k-i),:);
    mat_l1 = [mat_l1; sU2T(:, p*(i-1)+1:p*i)];
    mat_r((kp-n)*(i-1)+1:(kp-n)*(i), 1:m) = mat_M(1:kp-n, m*(i-1)+1:m*i); %行列の再配置
end

mat_l2 = [];
for i = 1:k-1
    mat_l2 = [mat_l2; Li_Ok(i).m];
end
mat_l2 = [mat_l2; zeros(kp-n, size(Li_Ok(1).m,2))];
mat_l = [mat_l1 mat_l2];

mat_res = (mat_l'*mat_l)^(-1)*mat_l'*mat_r;
D = mat_res(1:p, 1:m);
B = mat_res(p+1:p+n, 1:m);

